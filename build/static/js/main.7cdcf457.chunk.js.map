{"version":3,"sources":["components/privateRouter.js","features/login/components/index.js","features/login/containers/index.js","components/topnav.js","global/variable.js","features/manager/components/index.js","features/manager/reducers/index.js","features/manager/containers/index.js","features/accountManager/components/index.js","features/accountManager/reducers/index.js","features/accountManager/containers/index.js","navigation/index.js","features/decider/components/index.js","features/decider/reducers/index.js","features/decider/containers/index.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js","global/function.js"],"names":["PrivateRoute","Component","component","rest","flag","isAuthendicated","auth","render","props","to","md5","require","Login","state","showPassword","password","this","classes","loggingIn","console","log","style","marginTop","marginBottom","Paper","className","container","elevation","textContainer","passwordContainer","OutlinedInput","id","type","value","onChange","e","setState","target","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","Button","variant","disabled","trim","length","tryLogin","color","marginLeft","_renderErrorMessage","pwd","login","loginState","message","errorMessageContainer","successMessageContainer","React","withStyles","theme","width","margin","minWidth","maxWidth","paddingBottom","textAlign","backgroundColor","padding","fontSize","fontWeight","display","alignItems","justifyContent","lineHeight","height","paddingLeft","withTheme","connect","mainPageData","dispatch","bindActionCreators","LoginPage","styles","makeStyles","navContainer","background","borderBottom","navLink","textDecoration","borderRadius","activeTab","TopNavBar","routelist","useTheme","Array","isArray","map","route","index","path","activeClassName","pathname","MONTH","YEARS","PriceManager","handleClose","clearError","successMessage","searchContent","filter","pageSize","page","searchPage","searching","fetchProduct","updateFilter","handleRowChange","condition","handleChangePage","event","newPage","editIndex","targetPrice","products","_renderFilter","Divider","_renderList","_renderLoading","_renderAlert","filterContainer","searchBox","placeholder","loading","errorMessage","Snackbar","autoHideDuration","open","onClose","TransitionComponent","Slide","Alert","severity","columns","title","key","edit","totalCount","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","align","clsx","modifyCell","TableBody","row","updating","hover","role","tabIndex","tableCellFont","cellIndex","previous","readOnly","inputSizing","saveTargetPrice","pid","Save","changeModifyIndex","Edit","currentPrice","oldPrice","cellFont","titleFont","href","productInfoUrl","TablePagination","count","rowsPerPage","onChangePage","onChangeRowsPerPage","loadingContainer","CircularProgress","size","updateTargetPrice","top","FETCH_PRODUCTS","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAIL","UPDATE_TARGETPRICE","UPDATE_TARGETPRICE_SUCCESS","UPDATE_TARGETPRICE_FAIL","CLEAR_ERROR","initialState","payload","request","method","url","data","priceManagerReducer","action","priceManagerData","AccountManager","closeModal","modalopen","currentUpdate","owner","email","tempCard","modifyCard","modifyCardError","modifyAccountError","openFeedBack","saveCardInfo","error","i","curr","number","cvv","cards","deepcopyCards","addCard","keyRandom","Math","random","push","fetchAccount","_renderAccountList","_renderModifier","accounts","paperContainer","optionTable","header","tableCell","account","accountIndex","_renderCardInfo","_renderRecordInfo","records","note","active","suspendText","activeText","deepcopyAccount","accountId","dialogHeader","Dialog","aria-labelledby","disableBackdropClick","disableEscapeKeyDown","DialogContent","_renderFeedBack","renderCardModifier","renderAccountModifer","DialogActions","renderCardError","renderCardAction","renderAccountAction","upsertSuccess","bgcolor","status","feedbackContainer","feedbackContentContainer","closeFeedBack","errorContainer","autoFocus","updateAccountInfo","marginRight","card","cardIndex","specialKey","cardModifierContainer","removeButton","removeCard","DeleteForever","TextField","label","cardInputContainer","updateTempCard","FormControl","InputLabel","Select","inputProps","name","native","month","year","statusControl","Switch","checked","setAccountInfo","TextareaAutosize","resize","rowsMin","Accordion","AccordionSummary","accordionHeader","expandIcon","ExpandMore","aria-controls","Typography","AccordionDetails","cardId","record","recordIndex","updateDate","getDate","updatedAt","updateTime","getTime","result","successText","failText","productTitleContainer","productTitle","recordId","validateEmail","accountInfo","getEncryptAccount","upsertAccountInformation","currentCard","encryptedCard","encrypt","accountCopy","forEach","item","splice","timestamp","substring","replace","curretnUpdate","borderLeft","verticalAlign","borderCollapse","overflow","overflowX","overflowY","minHeight","right","left","bottom","zIndex","cursor","FETCH_ACCOUNT","FETCH_ACCOUNT_SUCCESS","FETCH_ACCOUNT_FAIL","UPSERT_ACCOUNT","UPSERT_ACCOUNT_SUCCESS","UPSERT_ACCOUNT_FAIL","loadingAccount","function","decrypt","accountManagerReducer","feedback","response","accountManagerData","ROUTELIST","Decider","expire","expireTime","now","Date","componentMap","exact","LOGIN","LOGIN_SUCCESS","LOGIN_FAIL","EXPIRE","JSON","parse","localStorage","getItem","authenticationReducer","day","setItem","stringify","reducers","asyncInitialState","combineReducers","client","axios","create","baseURL","responseType","store","createStore","reducer","applyMiddleware","axiosMiddleware","App","basename","window","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","crypto","test","text","iv","randomBytes","cipher","createCipheriv","process","encrypted","Buffer","concat","update","final","toString","content","hash","decipher","createDecipheriv","from"],"mappings":"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","file":"static/js/main.7cdcf457.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect  } from 'react-router-dom';\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const flag = (rest.isAuthendicated != null && rest.isAuthendicated.auth);\r\n  return(\r\n    <Route\r\n     render={props =>\r\n        flag == true ? (\r\n         <Component {...props} {...rest}/>\r\n       ) : (\r\n         <Redirect to=\"/\" />\r\n       )\r\n     }\r\n   />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Paper, withStyles,\r\n  TextField, OutlinedInput,\r\n  InputAdornment, IconButton,\r\n  Button, Slide\r\n} from '@material-ui/core';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Visibility, VisibilityOff } from  '@material-ui/icons';\r\nconst md5 = require('md5');\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showPassword: false,\r\n      password: \"\",\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes, isAuthendicated, loggingIn } = this.props;\r\n    const { password, showPassword } = this.state;\r\n    if(isAuthendicated != null && isAuthendicated.auth == true) {\r\n      console.log(\"redirect to manager page\");\r\n      return <Redirect to=\"/priceManager\" />\r\n    }\r\n    return (\r\n      <div style = {{marginTop: \"10%\", marginBottom: 20}}>\r\n        <Paper className = {classes.container} elevation = {3}>\r\n            <div className = {classes.textContainer}>\r\n              <span> Please Entry Password</span>\r\n            </div>\r\n\r\n            <div className = {classes.passwordContainer}>\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-password\"\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={password}\r\n                onChange={(e) => this.setState({password: e.target.value})}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={() => this.setState({showPassword: !showPassword})}\r\n                      onMouseDown={(e) => e.preventDefault()}\r\n                      edge=\"end\"\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n\r\n              <Button variant=\"contained\"\r\n                disabled = {loggingIn || password.trim().length  == 0}\r\n                onClick = {() => this.tryLogin()}\r\n                color=\"primary\" style = {{marginLeft: 15}}\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n            {this._renderErrorMessage()}\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  tryLogin() {\r\n    const { password } = this.state;\r\n      const pwd = md5(password);\r\n      this.props.login(pwd);\r\n  }\r\n\r\n  _renderErrorMessage() {\r\n    const { classes } = this.props;\r\n    const {  loginState, loggingIn } = this.props;\r\n    let message = \"logging in ...\";\r\n    if(loginState < 0) message = \"password is wrong\";\r\n    if(loginState < 0 || loggingIn) {\r\n      return (\r\n        <div className={loginState < 0 ? classes.errorMessageContainer : classes.successMessageContainer}>\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  container: {\r\n    width: \"70%\",\r\n    margin: \"auto\",\r\n    minWidth: 400,\r\n    maxWidth: 800,\r\n    paddingBottom: 15\r\n  },\r\n  textContainer: {\r\n    textAlign: \"center\",\r\n    color: \"white\",\r\n    backgroundColor: \"darkblue\",\r\n    padding: 10,\r\n    fontSize: 18,\r\n    fontWeight: 600\r\n  },\r\n  passwordContainer: {\r\n    padding: 20,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  errorMessageContainer: {\r\n    lineHeight: \"50px\",\r\n    height: 50,\r\n    color: \"red\",\r\n    textAlign: \"left\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n    paddingLeft: 20\r\n  },\r\n  successMessageContainer: {\r\n    lineHeight: \"50px\",\r\n    height: 50,\r\n    color: \"green\",\r\n    textAlign: \"left\",\r\n    fontSize: 18,\r\n    fontWeight: 600,\r\n  }\r\n})\r\n\r\nexport default withStyles(styles, {withTheme: true})(Login);\r\n","import LoginPage from \"../components\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthendicated: state.mainPageData.isAuthendicated\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React from \"react\";\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst TopNavBar = (props) => {\r\n  const classes = styles();\r\n  const theme = useTheme();\r\n  const { routelist } = props;\r\n  if(!Array.isArray(routelist)) {\r\n    return (\r\n      <div>\r\n        <h5> route list is not array</h5>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div className = {classes.navContainer}>\r\n    {\r\n      routelist.map((route, index) => {\r\n        const width = 100 / routelist.length + \"%\";\r\n        return (\r\n          <div key = {\"topbar\" + route.path + index} style = {{width: width, textAlign: \"center\"}}>\r\n            <NavLink\r\n              to = {\"/\"+ route.path}\r\n              className = {classes.navLink}\r\n              activeClassName = {classes.activeTab}\r\n            >\r\n              {route.pathname}\r\n            </NavLink>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst styles = makeStyles( theme => ({\r\n  navContainer: {\r\n    height: 60,\r\n    lineHeight: \"60px\",\r\n    display: \"flex\",\r\n    background: \"rgb(248, 248, 248)\",\r\n    borderBottom: \"2px solid rgb(231, 231, 231)\",\r\n    width: \"100%\",\r\n    padding: 10\r\n  },\r\n  navLink: {\r\n    padding: 15,\r\n    textDecoration: \"none\",\r\n    color: \"#337ab7\",\r\n    borderRadius: 5\r\n  },\r\n  activeTab: {\r\n    backgroundColor: \"#337ab7\",\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nexport default TopNavBar;\r\n","export const PAGESIZE = 50;\r\nexport const MONTH = [\r\n  0,1,2,3,4,5,6,7,8,9,10,11,12\r\n]\r\n\r\nexport const YEARS = [\r\n  17,18,19,\r\n  20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40\r\n]\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Slide,\r\n  TablePagination,\r\n  Snackbar,\r\n  TextField,\r\n  IconButton,\r\n  CircularProgress,\r\n  Divider,\r\n  Button,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport TopNavBar from '../../../components/topnav';\r\nimport { PAGESIZE } from '../../../global/variable';\r\nimport { Edit, Save, Search } from \"@material-ui/icons\";\r\nimport clsx from 'clsx';\r\n\r\nclass PriceManager extends React.Component {\r\n  componentDidMount() {\r\n    const { page, filter } = this.state;\r\n    const { fetchProduct, products } = this.props;\r\n    if(products.length > 0) {\r\n      return;\r\n    }\r\n    let condition = {\r\n      page: page,\r\n      pageSize: this.state.pageSize,\r\n    }\r\n    if(filter.trim().length > 3) {\r\n      condition.filter = filter;\r\n    }\r\n    fetchProduct(condition);\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 0,\r\n      filter: \"\",\r\n      editIndex: -1,\r\n      targetPrice: 0,\r\n      searching: false,\r\n      searchPage: 0,\r\n      pageSize: PAGESIZE,\r\n      successMessage: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopNavBar routelist= {this.props.routelist} />\r\n        {this._renderFilter()}\r\n        <Divider />\r\n        {this._renderList()}\r\n        {this._renderLoading()}\r\n        {this._renderAlert()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _renderFilter() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className = {classes.filterContainer}>\r\n        <input\r\n          type = {\"text\"}\r\n          className = {classes.searchBox}\r\n          value = {this.state.filter}\r\n          placeholder = {\"Enter Product Title\"}\r\n          onChange = {this.updateFilter}\r\n        />\r\n        <Button\r\n          onClick = {this.searchContent}\r\n          variant={\"contained\"} color={\"primary\"}\r\n          style = {{marginLeft: 15}}\r\n          aria-label=\"edit\"\r\n          disabled = {this.props.loading}\r\n        >\r\n          {\"查找 \"}\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _renderAlert() {\r\n    const { errorMessage } = this.props;\r\n    const { successMessage } = this.state;\r\n    let message = \"\";\r\n    if(errorMessage.length > 0) {\r\n      message = errorMessage\r\n    } else if(successMessage.length > 0)  {\r\n      message = successMessage;\r\n    }\r\n    return (\r\n      <Snackbar\r\n        autoHideDuration={1700}\r\n        open={message.length > 0 }\r\n        onClose={this.handleClose}\r\n        TransitionComponent={Slide}\r\n        key={\"slide alert\"}\r\n      >\r\n        <Alert\r\n          variant=\"filled\"\r\n          severity={successMessage.length > 0 ? \"success\" : \"error\"}\r\n          style = {{\r\n            padding: \"10px 90px\",\r\n            marginBottom: 50\r\n          }}\r\n        >\r\n          {message}\r\n        </Alert>\r\n      </Snackbar>\r\n    )\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { clearError } = this.props;\r\n    clearError();\r\n    this.setState({\r\n      successMessage: \"\"\r\n    })\r\n  }\r\n\r\n  searchContent = () => {\r\n    const { filter, page, pageSize, searchPage } = this.state;\r\n    if(filter.length > 3) {\r\n      this.setState({\r\n        searching: true\r\n      })\r\n      this.props.fetchProduct({\r\n        page: searchPage,\r\n        pageSize: pageSize,\r\n        filter: filter\r\n      })\r\n    }\r\n  }\r\n\r\n  updateFilter = (e) => {\r\n    const { searching, page, pageSize } = this.state;\r\n    if(e.target.value.length < 3) {\r\n      if(searching) {\r\n        this.props.fetchProduct({\r\n          page: page,\r\n          pageSize: pageSize\r\n        })\r\n      }\r\n      this.setState({\r\n        searching: false,\r\n        filter: e.target.value\r\n      })\r\n    } else {\r\n      this.setState({\r\n        filter: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  _renderList() {\r\n    const columns = [\r\n      {\r\n        title: \"#\",\r\n        key: \"pid\",\r\n      },\r\n      {\r\n        title: \"产品名\",\r\n        key: \"productTitle\"\r\n      },\r\n      {\r\n        title: \"库存\",\r\n        key: \"stockInfo\"\r\n      },\r\n      {\r\n        title: \"当前价格\",\r\n        key: \"currentPrice\"\r\n      },\r\n      {\r\n        title: \"旧价格\",\r\n        key: \"oldPrice\"\r\n      },\r\n      {\r\n        title: \"目标价格\",\r\n        key: \"targetPrice\",\r\n        edit: true\r\n      }\r\n    ]\r\n    const { classes, totalCount, products } = this.props;\r\n    const  { searching, searchPage, page } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n       <TableContainer>\r\n         <Table stickyHeader aria-label=\"sticky table\">\r\n           <TableHead>\r\n             <TableRow>\r\n               {columns.map((column) => (\r\n                 <TableCell\r\n                   key={column.key + \"-column\"}\r\n                   align={\"center\"}\r\n                   className={clsx({\r\n                         [classes.modifyCell]: column.edit == true,\r\n                       })\r\n                     }\r\n                 >\r\n                   {column.title}\r\n                 </TableCell>\r\n               ))}\r\n             </TableRow>\r\n           </TableHead>\r\n           <TableBody>\r\n             {products.map((row, index) => {\r\n               const { classes, updating, loading } = this.props;\r\n               const { editIndex, targetPrice } = this.state;\r\n               return (\r\n                 <TableRow\r\n                   hover role=\"checkbox\" tabIndex={-1} key={\"row\"+index}\r\n                   className = {classes.tableCellFont}\r\n                 >\r\n                   {columns.map((column, cellIndex) => {\r\n                     const { page, searching, searchPage, pageSize } = this.state;\r\n                     let previous = searching ? (searchPage * pageSize) : (page * pageSize)\r\n                     let value = row[column.key];\r\n                     if(cellIndex == 0) {\r\n                       value = previous + index + 1;\r\n                     }\r\n                     if(column.edit) {\r\n                       value = row[column.key] == null ? 0 : row[column.key];\r\n                     }\r\n\r\n                     const key = column.key + index + \"cell\" + cellIndex;\r\n                     if(!column.edit) {\r\n                       let color = \"\";\r\n                       if(column.key === \"currentPrice\") {\r\n                         if(row.currentPrice < row.oldPrice && row.currentPrice > 0) {\r\n                           color = \"orange\";\r\n                         }\r\n                         if(row.currentPrice > 0 && row.targetPrice && row.currentPrice <= row.targetPrice) {\r\n                           color = \"green\";\r\n                         }\r\n                       }\r\n                       return (\r\n                         <TableCell\r\n                          key={key}\r\n                          align={column.key === \"productTitle\" ? \"left\" : \"center\"}\r\n                          className = {clsx(classes.cellFont,\r\n                              {\r\n                                [classes.titleFont]: column.key === \"productTitle\",\r\n                              })}\r\n                          >\r\n                          {\r\n                            column.key === \"productTitle\" ?\r\n                            <a\r\n                            style = {{textDecoration: \"none\", color: \"black\"}}\r\n                              href = {row.productInfoUrl}\r\n                              target={\"_blank\"}\r\n                            >\r\n                              {value}\r\n                            </a>\r\n                            :\r\n                            <span style = {color.length > 0 ? {color: color, fontWeight: 600} : {}}>\r\n                             {value}\r\n                            </span>\r\n                          }\r\n\r\n                         </TableCell>\r\n                       );\r\n                     } else {\r\n                       const readOnly = index !== editIndex;\r\n                       return (\r\n                         <TableCell key={key} align={\"center\"} style = {{display: \"flex\"}}>\r\n                           <input\r\n                             id={\"tragerchange-\" + index}\r\n                             type=\"number\"\r\n                             readOnly = {readOnly ? true : false}\r\n                             className = {classes.inputSizing}\r\n                             value = {readOnly ? value : targetPrice}\r\n                             onChange = {(e) => this.setState({targetPrice: e.target.value})}\r\n                           />\r\n                           {\r\n                             readOnly == false ?\r\n                             <IconButton\r\n                               onClick = {() => this.saveTargetPrice(index, row.pid)}\r\n                               color=\"primary\"\r\n                               aria-label=\"edit\"\r\n                               disabled = {updating || loading}\r\n                             >\r\n                               <Save/>\r\n                             </IconButton>\r\n                             :\r\n                             <IconButton\r\n                               onClick = {() => this.changeModifyIndex(index, row[column.key])}\r\n                               color=\"primary\"\r\n                               disabled = {updating || loading}\r\n                               aria-label=\"edit\"\r\n                             >\r\n                               <Edit/>\r\n                             </IconButton>\r\n\r\n                           }\r\n                         </TableCell>\r\n                       )\r\n                     }\r\n\r\n                   })}\r\n                 </TableRow>\r\n               );\r\n             })}\r\n           </TableBody>\r\n         </Table>\r\n       </TableContainer>\r\n       <TablePagination\r\n         component=\"div\"\r\n         count={totalCount}\r\n         rowsPerPage={this.state.pageSize}\r\n         page={searching ? searchPage : page}\r\n         onChangePage={this.handleChangePage}\r\n         onChangeRowsPerPage = {this.handleRowChange}\r\n       />\r\n     </Paper>\r\n    )\r\n\r\n  }\r\n\r\n  _renderLoading() {\r\n    const { loading, classes, updating } = this.props;\r\n    if(loading) {\r\n      return (\r\n        <div className = {classes.loadingContainer}>\r\n          <CircularProgress color=\"primary\" size = {80} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n   handleRowChange = (e) => {\r\n     const { filter } = this.state;\r\n     let condition = {\r\n       page: 0,\r\n       pageSize: e.target.value\r\n     }\r\n     if(filter.trim().length > 3) {\r\n       condition.filter = filter;\r\n     }\r\n     this.setState({\r\n       pageSize:e.target.value,\r\n       page: 0\r\n     });\r\n     this.props.fetchProduct(condition);\r\n\r\n   }\r\n  handleChangePage = (event, newPage) => {\r\n    const { page, searching, filter } = this.state;\r\n    const { fetchProduct } = this.props;\r\n    if(newPage == page) {\r\n      console.log(\"is on current page\")\r\n    } else {\r\n      if(searching) {\r\n        this.setState({\r\n          searchPage: newPage\r\n        });\r\n      } else {\r\n        this.setState({\r\n          page: newPage\r\n        });\r\n      }\r\n\r\n      const condition = {\r\n        page: newPage,\r\n        pageSize: this.state.pageSize,\r\n      }\r\n      if(filter.trim().length > 3) {\r\n        condition.filter = filter;\r\n      }\r\n      fetchProduct(condition);\r\n\r\n    }\r\n   };\r\n\r\n  changeModifyIndex(index, value) {\r\n    this.setState({\r\n      targetPrice: value == null ? 0 : value,\r\n      editIndex: index\r\n    })\r\n  }\r\n\r\n  async saveTargetPrice(index, pid) {\r\n    const { products, updateTargetPrice } = this.props;\r\n    const { targetPrice } = this.state;\r\n    await updateTargetPrice(targetPrice, pid);\r\n    //restore state\r\n    const { errorMessage } = this.props;\r\n    if(errorMessage.length == 0) {\r\n      products[index].targetPrice = targetPrice;\r\n      this.setState({\r\n        successMessage: \"更新成功\"\r\n      })\r\n    }\r\n    this.setState({\r\n      editIndex: -1,\r\n      targetPrice: 0\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\nconst styles = theme => ({\r\n  modifyCell: {\r\n    minWidth: 200\r\n  },\r\n  inputSizing: {\r\n    height: 32,\r\n    textAlign: \"center\"\r\n  },\r\n  cellFont: {\r\n    fontSize: 16\r\n  },\r\n  titleFont: {\r\n    fontWeight: 600\r\n  },\r\n  loadingContainer: {\r\n    position: \"fixed\",\r\n    width: \"100%\",\r\n    height: 100,\r\n    top: \"45%\",\r\n    textAlign: \"center\"\r\n  },\r\n  filterContainer: {\r\n    padding: \"5px 20px\",\r\n    marginBottom: 15,\r\n    marginTop: 15\r\n  },\r\n  searchBox: {\r\n    height: 30,\r\n    width: \"40%\",\r\n    paddingLeft: 15\r\n  }\r\n})\r\n\r\nexport default withStyles(styles, {withTheme: true})(PriceManager);\r\n","const FETCH_PRODUCTS = \"priceManager/repo/manager/price/FETCH_PRODUCTS\";\r\nconst FETCH_PRODUCTS_SUCCESS = \"priceManager/repo/manager/price/FETCH_PRODUCTS_SUCCESS\";;\r\nconst FETCH_PRODUCTS_FAIL = \"priceManager/repo/manager/price/FETCH_PRODUCTS_FAIL\";\r\nconst UPDATE_TARGETPRICE = \"priceManager/repo/manager/price/UPDATE_TARGETPRICE\";\r\nconst UPDATE_TARGETPRICE_SUCCESS = \"priceManager/repo/manager/price/UPDATE_TARGETPRICE_SUCCESS\";\r\nconst UPDATE_TARGETPRICE_FAIL = \"priceManager/repo/manager/price/UPDATE_TARGETPRICE_FAIL\";\r\nconst CLEAR_ERROR = \"priceManager/repo/manager/price/CLEAR_ERROR\";\r\n\r\nlet initialState = {\r\n  products: [],\r\n  loading: false,\r\n  totalCount: 0,\r\n  updating: false,\r\n  errorMessage: \"\"\r\n}\r\n\r\n\r\nconst priceManagerReducer = ( state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return {...state, loading: true}\r\n      break;\r\n    case FETCH_PRODUCTS_SUCCESS:\r\n      return {...state, loading: false, products: action.payload.data.data, totalCount: action.payload.data.totalCount}\r\n      break;\r\n    case FETCH_PRODUCTS_FAIL:\r\n      console.log(\"fail to load products\")\r\n      return {...state, loading: false}\r\n      break;\r\n    case UPDATE_TARGETPRICE:\r\n      return {...state, updating: true, errorMessage: \"\"}\r\n      break;\r\n    case UPDATE_TARGETPRICE_SUCCESS:\r\n      return {...state, updating: false}\r\n      break;\r\n    case UPDATE_TARGETPRICE_FAIL:\r\n      console.log(\"unable to update the price\");\r\n      return {...state, updating: false, errorMessage: \"更新错误\"}\r\n      break;\r\n    case CLEAR_ERROR:\r\n      return {...state, errorMessage: \"\"};\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function fetchProduct(condition) {\r\n  return {\r\n    type: FETCH_PRODUCTS,\r\n    payload: {\r\n      request: {\r\n        method: \"POST\",\r\n        url: \"/priceManager/fetchProduct\",\r\n        data: {condition: condition}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateTargetPrice(targetPrice, pid) {\r\n  return {\r\n    type: UPDATE_TARGETPRICE,\r\n    payload: {\r\n      request: {\r\n        method: \"POST\",\r\n        url: \"/priceManager/changeTargetPrice\",\r\n        data: {\r\n          pid: pid,\r\n          targetPrice: targetPrice\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function clearError() {\r\n  return {\r\n    type: CLEAR_ERROR,\r\n  }\r\n}\r\n\r\n\r\nexport default priceManagerReducer;\r\n","import PriceManager from \"../components\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchProduct, updateTargetPrice, clearError } from \"../reducers\"\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthendicated: state.mainPageData.isAuthendicated,\r\n    products: state.priceManagerData.products,\r\n    loading: state.priceManagerData.loading,\r\n    totalCount: state.priceManagerData.totalCount,\r\n    updating: state.priceManagerData.updating,\r\n    errorMessage: state.priceManagerData.errorMessage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    fetchProduct,\r\n    updateTargetPrice,\r\n    clearError\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceManager);\r\n","import React from \"react\";\r\nimport {\r\n  withStyles,\r\n  Button,\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Dialog,\r\n  DialogContent,\r\n  Divider,\r\n  DialogActions,\r\n  Typography,\r\n  Slide,\r\n  TextField,\r\n  TextareaAutosize ,\r\n  AccordionDetails,\r\n  IconButton,\r\n  Switch,\r\n  Snackbar,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  CircularProgress\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { ExpandMore, DeleteForever } from '@material-ui/icons';\r\nimport TopNavBar from '../../../components/topnav';\r\nimport { MONTH, YEARS } from '../../../global/variable';\r\nimport { validateEmail, encrypt } from '../../../global/function';\r\n\r\n\r\nclass AccountManager extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchAccount } = this.props;\r\n    fetchAccount();\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalopen: false,\r\n      currentUpdate: {\r\n        owner:  \"\",\r\n        email: \"\",\r\n        owner: \"\",\r\n        cards: [],\r\n        active: 0\r\n      },\r\n      modifyCardError: \"\",\r\n      tempCard: [],\r\n      modifyCard: false,\r\n      modifyAccountError: \"\",\r\n      openFeedBack: false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopNavBar routelist= {this.props.routelist} />\r\n        {this._renderAccountList()}\r\n        {this._renderModifier()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  _renderAccountList() {\r\n    const headers = [\r\n      \"#\", \"Account Info\", \"Cards\", \"Order Records\", \"Notes\", \"Status\", \"Action\"\r\n    ];\r\n    const { accounts, classes } = this.props;\r\n    return (\r\n      <div className={classes.paperContainer}>\r\n      <Button\r\n        disabled = {this.props.updating}\r\n        variant={\"contained\"}\r\n        color = \"primary\"\r\n        style = {{margin: \"20px 0\"}}\r\n        onClick = {() => this.setState({modalopen: true})}\r\n      >\r\n        Add Account\r\n      </Button>\r\n      <Paper>\r\n        <Table className = {classes.optionTable}>\r\n         <TableContainer>\r\n           <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n               <TableRow>\r\n               {\r\n                 headers.map((header, index) => {\r\n                   return (\r\n                     <TableCell\r\n                       className = {classes.tableCell}\r\n                       key={header + \"-column\" + index}\r\n                       align={\"left\"}\r\n                       style={{fontWeight: 600}}\r\n                     >\r\n                      {header}\r\n                     </TableCell>\r\n                   )\r\n                 })\r\n               }\r\n               </TableRow>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {\r\n                  accounts.map((account, accountIndex) => {\r\n                    return (\r\n                      <TableRow key = {account.accountId + \"-\"+\"accountIndex\"}>\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell} style = {{width: \"5%\"}}>\r\n                            {accountIndex + 1}\r\n                          </TableCell>\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell}  style = {{width: \"15%\"}}>\r\n                            <span>{account.owner}</span>\r\n                            {account.email ? <br/> : <span/>}\r\n                            <span>{account.email}</span><br/>\r\n                          </TableCell>\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell}  style = {{width: \"25%\"}}>\r\n                            {\r\n                              this._renderCardInfo(account.cards)\r\n                            }\r\n                          </TableCell>\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell}  style = {{width: \"30%\"}}>\r\n                            {\r\n                              this._renderRecordInfo(account.records)\r\n                            }\r\n                          </TableCell>\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell}  style = {{width: \"7%\"}}>\r\n                            {account.note}\r\n                          </TableCell>\r\n\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell}  style = {{width: \"8%\"}}>\r\n                            {\r\n                              account.active == 0 ?\r\n                                <span className = {classes.suspendText}>Suspended</span>\r\n                              :\r\n                                <span className = {classes.activeText}>Ready</span>\r\n                            }\r\n                          </TableCell>\r\n\r\n                          <TableCell align = {\"left\"} className = {classes.tableCell}  style = {{width: \"10%\"}}>\r\n                            <Button\r\n                              variant={\"contained\"}\r\n                              color = \"primary\"\r\n                              disabled = {this.props.updating}\r\n                              style = {{marginTop: 5, padding: 5, marginBottom: 5}}\r\n                              onClick = {() => this.setState({\r\n                                modalopen: true,\r\n                                currentUpdate: this.deepcopyAccount(account)\r\n                              })}\r\n                            >\r\n                              Edit\r\n                            </Button>\r\n                          </TableCell>\r\n\r\n                      </TableRow>\r\n                    )\r\n                  })\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Table>\r\n      </Paper>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  closeModal = () => {\r\n    this.setState({\r\n      modalopen: false,\r\n      currentUpdate: {\r\n        owner:  \"\",\r\n        email: \"\",\r\n        owner: \"\",\r\n        note: \"\",\r\n        cards: [],\r\n        active: 0\r\n      },\r\n      tempCard: [],\r\n      modifyCard: false,\r\n      modifyCardError: \"\",\r\n      modifyAccountError: \"\",\r\n      openFeedBack: false\r\n    })\r\n  }\r\n\r\n  _renderModifier() {\r\n    const { modalopen, currentUpdate, modifyCard } = this.state;\r\n    const { classes } = this.props;\r\n    let dialogHeader = currentUpdate.accountId == null? \"添加账户信息\" : \"更新账户信息\";\r\n    if(modifyCard) {\r\n      dialogHeader = \"更新信用卡信息\";\r\n    }\r\n    return (\r\n      <Dialog\r\n        onClose={this.closeModal}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={modalopen}\r\n        TransitionComponent = {Slide}\r\n        maxWidth = {false}\r\n        disableBackdropClick = {true}\r\n        disableEscapeKeyDown = {true}\r\n      >\r\n          <h2 id=\"customized-dialog-title\" style = {{textAlign: 'center'}}>\r\n            {dialogHeader}\r\n          </h2>\r\n          <Divider />\r\n          <DialogContent style = {{padding: \"20px 10px\", minWidth: 600, position: \"relative\"}}>\r\n            {this._renderFeedBack()}\r\n            <div style = {{width: \"90%\", margin: \"auto\"}}>\r\n            {\r\n              modifyCard === true ?\r\n              this.renderCardModifier()\r\n              :\r\n              this.renderAccountModifer(currentUpdate)\r\n            }\r\n            </div>\r\n          </DialogContent>\r\n          <Divider />\r\n          <DialogActions style = {{position: \"relative\"}}>\r\n            {this.renderCardError()}\r\n            {\r\n              modifyCard === true ?\r\n              this.renderCardAction() :\r\n              this.renderAccountAction(currentUpdate)\r\n            }\r\n          </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n\r\n  _renderFeedBack() {\r\n    const { classes, updating, upsertSuccess } = this.props;\r\n    const { openFeedBack } = this.state;\r\n    if(openFeedBack === false ) return;\r\n    let bgcolor = \"red\";\r\n    if(updating) bgcolor = \"white\";\r\n    if(upsertSuccess.status == true ) bgcolor = \"limegreen\";\r\n    let message = upsertSuccess.status ? \"Operation Successed!\" : upsertSuccess.message;\r\n    return (\r\n      <div className = {classes.feedbackContainer}>\r\n        <div className = {classes.feedbackContentContainer} style = {{backgroundColor: bgcolor}}>\r\n          { updating ?\r\n            <div/>\r\n            : <div className = {classes.closeFeedBack} onClick = {() => this.setState({openFeedBack: false})}>x</div>\r\n          }\r\n          {\r\n            updating ?\r\n            <CircularProgress color=\"primary\" size = {60}/> :\r\n            <span> {message} </span>\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCardError() {\r\n    const {modifyCard, modifyCardError, modifyAccountError} = this.state;\r\n    const { classes } = this.props;\r\n    if(modifyCard === true && modifyCardError.length > 0) {\r\n      return (\r\n        <div className = {classes.errorContainer}>\r\n          {modifyCardError}\r\n        </div>\r\n      )\r\n    } else if(modifyCard === false && modifyAccountError.length > 0) {\r\n      return (\r\n        <div className = {classes.errorContainer}>\r\n          {modifyAccountError}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  renderAccountAction(currentUpdate) {\r\n    return (\r\n      <div>\r\n        <Button autoFocus onClick={() => this.updateAccountInfo()}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          disabled = {this.props.updating}\r\n          style = {{marginRight: 8}}\r\n        >\r\n          {!currentUpdate.accountId ? \"添加\" : \"更新\"}\r\n        </Button>\r\n        <Button onClick={this.closeModal}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disabled = {this.props.updating}\r\n          style = {{marginRight: 15}}\r\n        >\r\n          关闭\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCardAction() {\r\n    return (\r\n      <div>\r\n        <Button autoFocus\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style = {{marginRight: 8}}\r\n          disabled = {this.props.updating}\r\n          onClick = {this.saveCardInfo}\r\n        >\r\n          确定\r\n        </Button>\r\n        <Button  disabled = {this.props.updating} onClick={() =>this.setState({\r\n          modifyCard: false,\r\n          tempCard: [],\r\n          modifyCardError: \"\"\r\n        })}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style = {{marginRight: 15}}\r\n        >\r\n          返回\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderCardModifier() {\r\n    const { tempCard } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <div style = {{marginBottom: 20}}>\r\n          <Button\r\n            color = {\"primary\"}\r\n            variant = {\"contained\"}\r\n            onClick = {this.addCard}\r\n            disabled = {this.props.updating}\r\n          >\r\n            添加新卡\r\n          </Button>\r\n        </div>\r\n        {\r\n          tempCard.map((card, cardIndex) => {\r\n            const specialKey = card.random ? card.random : card[\"card.cardId\"];\r\n            return (\r\n              <Paper key = {\"cardModifier\" + cardIndex + specialKey } className = {classes.cardModifierContainer} elevation = {3}>\r\n                <div className = {classes.removeButton}>\r\n                  <IconButton onClick = {() => this.removeCard(cardIndex)}>\r\n                    <DeleteForever color = {\"secondary\"}/>\r\n                  </IconButton>\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    label={\"#\" + (cardIndex + 1) + \" - 卡号\"}\r\n                    className = {classes.cardInputContainer}\r\n                    style = {{minWidth: 350}}\r\n                    value = {card[\"card.cardNumber\"]}\r\n                    type = {\"number\"}\r\n                    onChange = { (e) => this.updateTempCard(e.target.value, cardIndex, \"card.cardNumber\" )}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <TextField\r\n                    label=\"CVV\"\r\n                    type = {\"number\"}\r\n                    className = {classes.cardInputContainer}\r\n                    value = {card[\"card.cvv\"]}\r\n                    onChange = { (e) => this.updateTempCard(e.target.value, cardIndex, \"card.cvv\" )}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <TextField\r\n                    label=\"First Name\"\r\n                    className = {classes.cardInputContainer}\r\n                    value = {card[\"card.cardFirstName\"]}\r\n                    onChange = { (e) => this.updateTempCard(e.target.value, cardIndex, \"card.cardFirstName\" )}\r\n                  />\r\n\r\n                  <TextField\r\n                    label=\"Last Name\"\r\n                    className = {classes.cardInputContainer}\r\n                    value = {card[\"card.cardLastName\"]}\r\n                    onChange = { (e) => this.updateTempCard(e.target.value, cardIndex, \"card.cardLastName\" )}\r\n                  />\r\n                </div>\r\n                <FormControl style = {{marginRight: 20, marginBottom: 20}}>\r\n                  <InputLabel id={\"select-month\" + cardIndex}>Month*</InputLabel>\r\n                  <Select\r\n                    inputProps={{\r\n                      name: 'month' + cardIndex,\r\n                      id: 'month-selector' + cardIndex,\r\n                    }}\r\n                    value={card[\"card.expireMonth\"]}\r\n                    native\r\n                    onChange={(e) => this.updateTempCard(e.target.value, cardIndex, \"card.expireMonth\")}\r\n                  >\r\n                    {MONTH.map((month) => (\r\n                      <option value={month} key = {\"month-option\"+month}>{month}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <InputLabel id={\"select-year\"+cardIndex}>YEAR*</InputLabel>\r\n                  <Select\r\n                    inputProps={{\r\n                      name: 'year'+cardIndex,\r\n                      id: 'year-selector'+cardIndex,\r\n                    }}\r\n                    value={card[\"card.expireYear\"]}\r\n                    native\r\n                    onChange={(e) => this.updateTempCard(e.target.value, cardIndex, \"card.expireYear\")}\r\n                  >\r\n                    {YEARS.map((year) => (\r\n                      <option value={year} key = {\"year-option\"+year}>{year}</option>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Paper>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderAccountModifer(account) {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div style = {{position: \"relative\"}}>\r\n        <div className = {classes.statusControl}>\r\n          {\r\n            account.active == 0 ?\r\n            <span className = {classes.suspendText}>Susupended</span>\r\n            :\r\n            <span className = {classes.activeText}>Ready</span>\r\n          }\r\n          <Switch\r\n            checked = {account.active == 1}\r\n            onChange = {(e) => this.setAccountInfo(e.target.checked ? 1 : 0, \"active\")}\r\n            color=\"primary\"\r\n            name=\"accountStatus\"\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n        </div>\r\n        <div style = {{marginBottom: 15}}>\r\n          <TextField\r\n            label=\"账号名 *\"\r\n            style = {{width: \"60%\", minWidth: 300}}\r\n            value = {account.owner}\r\n            onChange = {(e) => this.setAccountInfo(e.target.value, \"owner\")}\r\n          />\r\n        </div>\r\n        <div style = {{marginBottom: 15}}>\r\n          <TextField\r\n            style = {{width: \"60%\", minWidth: 300}}\r\n            label=\"邮箱号\"\r\n            value = {account.email}\r\n            onChange = {(e) => this.setAccountInfo(e.target.value, \"email\")}\r\n          />\r\n        </div>\r\n        <div style = {{marginBottom: 15}}>\r\n           <TextareaAutosize\r\n              style = {{width: \"60%\", minWidth: 300, resize: \"vertical\"}}\r\n              aria-label=\"minimum height\"\r\n              rowsMin={3}\r\n              placeholder=\"Please Give Some Note\"\r\n              value = {account.note}\r\n              onChange = {(e) => this.setAccountInfo(e.target.value, \"note\")}\r\n            />\r\n        </div>\r\n        <h3 style = {{display: \"inline-block\"}}>卡号信息</h3>\r\n        <Button\r\n          variant={\"contained\"}\r\n          color = \"primary\"\r\n          disabled = {this.props.updating}\r\n          style = {{marginLeft: 20}}\r\n          onClick = {() => this.setState({modifyCard: true, display: \"inline-block\", tempCard: this.deepcopyCards(account.cards)})}\r\n        >\r\n          添加 / 更新\r\n        </Button>\r\n        {this._renderCardInfo(account.cards)}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _renderCardInfo(cards) {\r\n    if(!cards || !Array.isArray(cards) ) return;\r\n    return (\r\n        <div>\r\n          {\r\n            cards.map((card, cardIndex) => {\r\n              const { classes } = this.props;\r\n              return (\r\n                <Accordion style={{marginTop: 10, marginBottom: 10}} key = {\"card\" + card.cardId}>\r\n                  <AccordionSummary\r\n                    className = {classes.accordionHeader}\r\n                    expandIcon={<ExpandMore style = {{color: \"white\"}}/>}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                  >\r\n                    <Typography>{\"Card \" + (cardIndex + 1)}</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails style = {{backgroundColor: \"#ddd\"}}>\r\n                    <Typography>\r\n                      <span style = {{fontWeight: 600}}>Card Number: </span>{card[\"card.cardNumber\"]}<br/>\r\n                      <span style = {{fontWeight: 600}}>CCV: </span>***<br/>\r\n                      <span style = {{fontWeight: 600}}>Name on Card: </span>{card[\"card.cardFirstName\"] + \" \" + card[\"card.cardLastName\"]}<br/>\r\n                      <span style = {{fontWeight: 600}}>Expire: </span>{card[\"card.expireMonth\"] + \"/\" + card[\"card.expireYear\"]}\r\n                    </Typography>\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n    )\r\n  }\r\n\r\n  _renderRecordInfo(records) {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n      {\r\n        records.map((record, recordIndex) => {\r\n          const updateDate = this.getDate(record.updatedAt);\r\n          const updateTime = this.getTime(record.updatedAt);\r\n          return (\r\n            <div key = {\"record\" + record.recordId} style = {{fontSize: 12}}>\r\n              <span>{\"[\" + updateDate + \" \" + updateTime + \"]\"}</span>\r\n              {\r\n                record.result == 0 ?\r\n                <span className = {classes.successText}>Successed</span>\r\n                :\r\n                <span className = {classes.failText}>Failed</span>\r\n              }\r\n              <br/>\r\n              <div className = {classes.productTitleContainer}>\r\n                <pre className = {classes.productTitle}>{record.[\"product.productTitle\"]}</pre>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  async updateAccountInfo() {\r\n    const { currentUpdate } = this.state;\r\n    if( !currentUpdate.owner || currentUpdate.owner.trim().length == 0 ) {\r\n      return this.setState({\r\n        modifyAccountError: \"用户名不能为空\"\r\n      })\r\n    }\r\n    if(currentUpdate.email.length > 0) {\r\n      if(!validateEmail(currentUpdate.email)) {\r\n        return this.setState({\r\n          modifyAccountError: \"邮箱格式不正确\"\r\n        })\r\n      }\r\n    }\r\n\r\n    // update information\r\n    let accountInfo = this.getEncryptAccount(currentUpdate);\r\n    const { upsertAccountInformation } = this.props;\r\n    this.setState({\r\n      openFeedBack: true\r\n    })\r\n    await upsertAccountInformation(accountInfo);\r\n    const { upsertSuccess, fetchAccount } = this.props;\r\n    if(upsertSuccess.status == true) {\r\n      // if success reload account\r\n      fetchAccount();\r\n      this.setState({\r\n        currentUpdate: {\r\n          owner:  \"\",\r\n          email: \"\",\r\n          owner: \"\",\r\n          note: \"\",\r\n          cards: [],\r\n          active: 0\r\n        },\r\n        tempCard: [],\r\n        modifyCard: false,\r\n        modifyCardError: \"\",\r\n        modifyAccountError: \"\",\r\n      })\r\n    }\r\n  }\r\n\r\n  getEncryptAccount(account) {\r\n    if(account == null) return account;\r\n    let result = {\r\n      ...account,\r\n      cards: []\r\n    }\r\n    for(let i = 0; i < account.cards.length; i++ ) {\r\n      let currentCard = account.cards[i];\r\n      let encryptedCard = {\r\n        ...currentCard,\r\n        \"card.cardNumber\": encrypt(currentCard[\"card.cardNumber\"]),\r\n        \"card.cvv\": encrypt(currentCard[\"card.cvv\"]),\r\n        \"card.cardFirstName\": encrypt(currentCard[\"card.cardFirstName\"]),\r\n        \"card.cardLastName\": encrypt(currentCard[\"card.cardLastName\"])\r\n      }\r\n      result.cards.push(encryptedCard);\r\n    }\r\n    return result;\r\n  }\r\n  deepcopyAccount(account) {\r\n    if(!account || !account.accountId) return account;\r\n    let accountCopy = {\r\n      ...account,\r\n      cards: [],\r\n    };\r\n    for(let i = 0 ; i < account.cards.length; i++) {\r\n      accountCopy.cards.push({...account.cards[i]});\r\n    }\r\n    return accountCopy;\r\n  }\r\n\r\n  deepcopyCards(cards) {\r\n    if(!cards || !Array.isArray(cards)) return cards;\r\n    let result = [];\r\n    cards.forEach((item, i) => {\r\n      result.push({...item});\r\n    });\r\n    return result;\r\n  }\r\n\r\n  updateTempCard(value, index, key) {\r\n    const { tempCard } = this.state;\r\n    tempCard[index][key] = value;\r\n    this.setState({\r\n      tempCard: [...tempCard]\r\n    })\r\n  }\r\n\r\n  removeCard(index) {\r\n    const {tempCard } = this.state;\r\n    tempCard.splice(index, 1);\r\n    this.setState({\r\n      tempCard: [...tempCard]\r\n    })\r\n  }\r\n\r\n  saveCardInfo = () => {\r\n    const { tempCard } = this.state;\r\n    let error = \"\";\r\n    for(let i = 0; i < tempCard.length; i++) {\r\n      const curr = tempCard[i];\r\n      const number = curr[\"card.cardNumber\"] ? curr[\"card.cardNumber\"] + \"\" : \"\";\r\n      const cvv = curr[\"card.cvv\"] ? curr[\"card.cvv\"] + \"\" : \"\";\r\n      if( number.length < 15) {\r\n        error = \"Invalid Card Number on card # \" + (i+1);\r\n        break;\r\n      }\r\n      if(cvv.length < 3 ){\r\n        error = \"Invalid Card CVV on card # \" + (i+1);\r\n        break;\r\n      }\r\n      if(!curr[\"card.cardFirstName\"] || curr[\"card.cardFirstName\"].trim().length == 0) {\r\n        error = \"Invalid Card First Name on card # \" + (i+1);\r\n        break;\r\n      }\r\n      if(!curr[\"card.cardLastName\"] || curr[\"card.cardLastName\"].trim().length == 0) {\r\n        error = \"Invalid Card Last Name on card # \" + (i+1);\r\n        break;\r\n      }\r\n      if(!curr[\"card.expireMonth\"] || curr[\"card.expireMonth\"] < 1 || curr[\"card.expireMonth\"]> 12) {\r\n        error = \"Invalid Card Expire Month on card # \" + (i+1);\r\n        break;\r\n      }\r\n      if(!curr[\"card.expireYear\"] || curr[\"card.expireYear\"] < 20) {\r\n        error = \"Invalid Card Expire Year on card # \" + (i+1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(error.length > 0)  {\r\n      console.log(\"some error occur\")\r\n      this.setState({\r\n        modifyCardError: error\r\n      })\r\n    } else {\r\n      const { currentUpdate } = this.state;\r\n      currentUpdate.cards = this.deepcopyCards(tempCard);\r\n      this.setState({\r\n        modifyCard: false,\r\n        modifyCardError: \"\",\r\n        currentUpdate: {...currentUpdate},\r\n        tempCard: []\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  addCard = () => {\r\n    const { tempCard } = this.state;\r\n    const keyRandom = Math.random() * 100000;\r\n    tempCard.push({\r\n      \"card.cardNumber\": null,\r\n      \"card.cvv\": null,\r\n      \"card.cardFirstName\": \"\",\r\n      \"card.cardLastName\": \"\",\r\n      \"card.expireYear\": null,\r\n      \"card.expireMonth\": null,\r\n      random: keyRandom\r\n    });\r\n    this.setState({\r\n      tempCard: [...tempCard]\r\n    })\r\n  }\r\n\r\n  getDate(timestamp) {\r\n    if(!timestamp || timestamp.length < 10) {return \"\"}\r\n    let result = \"\";\r\n    result += timestamp.substring(0, 10);\r\n    return result.replace(/-/g, \"/\");\r\n  }\r\n\r\n  getTime(timestamp) {\r\n    if(!timestamp || timestamp.length < 24) {\r\n      return \"\"\r\n    }\r\n    return timestamp.substring(11,16);\r\n  }\r\n\r\n  setAccountInfo(value, key) {\r\n    let { currentUpdate } = this.state;\r\n    currentUpdate[key] = value;\r\n    this.setState({\r\n      curretnUpdate: {...currentUpdate}\r\n    })\r\n  }\r\n}\r\n\r\n\r\nconst styles = theme => ({\r\n  paperContainer: {\r\n    width: \"94%\",\r\n    margin: \"auto\",\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  cardModifierContainer: {\r\n    padding: 20,\r\n    marginBottom: 20,\r\n    position: \"relative\"\r\n  },\r\n  suspendText: {\r\n    padding: \"5px 6px\",\r\n    borderRadius: 4,\r\n    fontSize: 12,\r\n    color: \"white\",\r\n    backgroundColor: \"grey\"\r\n  },\r\n  activeText: {\r\n    padding: \"5px 6px\",\r\n    borderRadius: 4,\r\n    fontSize: 12,\r\n    color: \"white\",\r\n    backgroundColor: \"#3f51b5\"\r\n  },\r\n  successText: {\r\n    padding: \"2px 6px\",\r\n    backgroundColor: \"limegreen\",\r\n    color: \"white\",\r\n    borderRadius: 4,\r\n    marginLeft: 7\r\n  },\r\n  failText: {\r\n    padding: \"2px 6px\",\r\n    backgroundColor: \"red\",\r\n    color: \"white\",\r\n    borderRadius: 4,\r\n    marginLeft: 7\r\n  },\r\n  tableCell: {\r\n    borderLeft: \"1px solid #ddd\",\r\n    padding: \"2px 10px\",\r\n    verticalAlign: \"text-top\"\r\n  },\r\n  optionTable: {\r\n    width: \"100%\",\r\n    borderCollapse: \"collapse\",\r\n  },\r\n  productTitleContainer: {\r\n    overflow: \"hidden\",\r\n    maxWidth: 300,\r\n    fontWeight: 600,\r\n    height: 26,\r\n    lineHeight: \"14px\",\r\n    marginLeft: 10,\r\n    marginTop: -5,\r\n    marginBottom:10\r\n  },\r\n  productTitle: {\r\n    width: \"100%\",\r\n    overflowX: \"scroll\",\r\n    overflowY: \"hidden\"\r\n  },\r\n  accordionHeader: {\r\n    backgroundColor: \"limegreen\", color: \"white\", minHeight: \"35px\", height: 35\r\n  },\r\n  statusControl: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0\r\n  },\r\n  cardInputContainer: {\r\n    width: \"30%\",\r\n    minWidth: 200,\r\n    marginRight: 20,\r\n    marginBottom: 15\r\n  },\r\n  removeButton: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0\r\n  },\r\n  errorContainer: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"70%\",\r\n    paddingLeft: 20,\r\n    fontSize: 18,\r\n    height: 46,\r\n    lineHeight: \"46px\",\r\n    color: \"red\"\r\n  },\r\n  feedbackContainer: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    zIndex: 9999,\r\n    backgroundColor: \"rgba(0,0,0,0.8)\",\r\n    display: \"flex\"\r\n  },\r\n  feedbackContentContainer: {\r\n    width: 200,\r\n    height: 120,\r\n    fontWeight: 600,\r\n    margin: \"auto\",\r\n    justifyContent: \"center\",\r\n    color: \"white\",\r\n    backgroundColor: \"limegreen\",\r\n    borderRadius: 6,\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    position: \"relative\"\r\n  },\r\n  closeFeedBack: {\r\n    position: \"absolute\",\r\n    cursor: \"pointer\",\r\n    top: -8,\r\n    right: -8,\r\n    zIndex: 10000,\r\n    backgroundColor: \"#ddd\",\r\n    color: \"red\",\r\n    fontWeight: 700,\r\n    width: 16,\r\n    height: 16,\r\n    lineHeight: \"11px\",\r\n    textAlign: \"center\",\r\n    borderRadius: \"50%\"\r\n  }\r\n\r\n})\r\n\r\nexport default withStyles(styles, {withTheme: true})(AccountManager);\r\n","import { decrypt } from '../../../global/function';\r\nconst FETCH_ACCOUNT = \"accountManager/repo/manager/account/FETCH_ACCOUNT\";\r\nconst FETCH_ACCOUNT_SUCCESS = \"accountManager/repo/manager/account/FETCH_ACCOUNT_SUCCESS\";\r\nconst FETCH_ACCOUNT_FAIL = \"accountManager/repo/manager/account/FETCH_ACCOUNT_FAIL\";\r\nconst UPSERT_ACCOUNT = \"accountManager/repo/manager/account/UPSERT_ACCOUNT\";\r\nconst UPSERT_ACCOUNT_SUCCESS = \"accountManager/repo/manager/account/UPSERT_ACCOUNT_SUCCESS\";\r\nconst UPSERT_ACCOUNT_FAIL = \"accountManager/repo/manager/account/UPSERT_ACCOUNT_FAIL\";\r\n\r\nlet initialState = {\r\n  loadingAccount: false,\r\n  accounts: [],\r\n  upsertSuccess: {\r\n    status: false,\r\n    message: \"\"\r\n  },\r\n  updating: false\r\n}\r\n\r\nconst accountManagerReducer = ( state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_ACCOUNT:\r\n      return {...state, loadingAccount: true}\r\n      break;\r\n    case FETCH_ACCOUNT_SUCCESS:\r\n      let accounts = action.payload.data.data;\r\n      accounts.forEach((account, i) => {\r\n        account.cards.forEach((card, i) => {\r\n          card['card.cardFirstName'] = decrypt(card['card.cardFirstName']);\r\n          card['card.cardNumber'] = decrypt(card['card.cardNumber']);\r\n          card['card.cvv'] = decrypt(card['card.cvv']);\r\n          card['card.cardLastName'] = decrypt(card['card.cardLastName']);\r\n        })\r\n      });\r\n      return {...state, loadingAccount: false, accounts: accounts}\r\n      break;\r\n    case FETCH_ACCOUNT_FAIL:\r\n      return {...state, loadingAccount: false}\r\n      break;\r\n    case UPSERT_ACCOUNT:\r\n      return {...state, updating: true, upsertSuccess: {status: false, message: \"\"}}\r\n      break;\r\n    case UPSERT_ACCOUNT_SUCCESS:\r\n      return {...state, updating: false, upsertSuccess: {status: true, message: \"\"}}\r\n      break;\r\n    case UPSERT_ACCOUNT_FAIL:\r\n      let feedback = \"Failed to update with unknow issues, please try again\";\r\n      if(action.error && action.error.response && action.error.response.data) {\r\n        feedback = action.error.response.data.message;\r\n      }\r\n      return {...state, updating: false, upsertSuccess: {status: false, message: feedback}}\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function fetchAccount() {\r\n    return {\r\n      type: FETCH_ACCOUNT,\r\n      payload: {\r\n        request: {\r\n          method: \"GET\",\r\n          url: \"/accountManager/fetchAccount\"\r\n        }\r\n      }\r\n    }\r\n}\r\n\r\nexport function upsertAccountInformation(accountInfo) {\r\n  return {\r\n    type: UPSERT_ACCOUNT,\r\n    function: decrypt,\r\n    payload: {\r\n      request: {\r\n        method: \"POST\",\r\n        url: \"/accountManager/upsertAccount\",\r\n        data: {data: accountInfo}\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default accountManagerReducer;\r\n","import AccountManager from \"../components\"\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { fetchAccount, upsertAccountInformation } from \"../reducers\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      isAuthendicated: state.mainPageData.isAuthendicated,\r\n      loadingAccount: state.accountManagerData.loadingAccount,\r\n      accounts: state.accountManagerData.accounts,\r\n      updating: state.accountManagerData.updating,\r\n      upsertSuccess: state.accountManagerData.upsertSuccess\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return  bindActionCreators({\r\n    fetchAccount,\r\n    upsertAccountInformation\r\n  }, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountManager);\r\n","export const ROUTELIST = [\r\n  {\r\n    path: \"priceManager\",\r\n    pathname: \"目标价格管理\",\r\n    component: \"PriceManager\"\r\n  },\r\n  {\r\n    path: \"accountManager\",\r\n    pathname: \"账户管理\",\r\n    component: \"AccountManager\"\r\n  }\r\n]\r\n","import React from 'react';\r\nimport PrivateRouter from '../../../components/privateRouter';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Login from \"../../login/containers\";\r\nimport PriceManager from \"../../manager/containers\";\r\nimport AccountManager from \"../../accountManager/containers\";\r\nimport { ROUTELIST } from \"../../../navigation\";\r\n\r\nexport default class Decider extends React.Component {\r\n  componentDidMount() {\r\n    const { isAuthendicated, expire } = this.props;\r\n    // check if isAuthendicated is expired\r\n    if(isAuthendicated == null) {\r\n      expire();\r\n    } else if(isAuthendicated != null && isAuthendicated.expireTime!=null) {\r\n      let now = (new Date()).getTime();\r\n      if(isAuthendicated.expireTime <= now) {\r\n        const { expire } = this.props;\r\n        expire();\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isAuthendicated, login, expire, loggingIn, loginState } = this.props;\r\n    return (\r\n      <Switch>\r\n      {\r\n        ROUTELIST.map((route, index) => {\r\n          return (\r\n            <PrivateRouter path={\"/\" + route.path}\r\n              key = {route.component + \"-\" + index}\r\n              component={componentMap[route.component]}\r\n              isAuthendicated = {isAuthendicated}\r\n              routelist = {ROUTELIST}\r\n            />\r\n          )\r\n        })\r\n      }\r\n        <Route path=\"/\"\r\n          exact\r\n          render = { props => {\r\n            return (\r\n              <Login\r\n                isAuthendicated = {isAuthendicated}\r\n                login = {login}\r\n                loggingIn = {loggingIn}\r\n                loginState = {loginState}\r\n              />\r\n            )\r\n\r\n          }}\r\n        />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nconst componentMap = {\r\n  \"PriceManager\": PriceManager,\r\n  \"AccountManager\": AccountManager\r\n}\r\n","const LOGIN = \"priceManager/repo/authendication/login/LOGIN\";\r\nconst LOGIN_SUCCESS = \"priceManager/repo/authendication/login/LOGIN_SUCCESS\";\r\nconst LOGIN_FAIL = \"priceManager/repo/authendication/login/LOGIN_FAIL\";\r\nconst EXPIRE = \"priceManager/repo/authendication/login/EXPIRE\";\r\n\r\nlet initialState = {\r\n  isAuthendicated: JSON.parse(localStorage.getItem(\"authendicated\")) || null,\r\n  loggingIn: false,\r\n  loginState: 0\r\n}\r\n\r\n\r\nconst authenticationReducer = ( state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return {...state, loggingIn: true}\r\n      break;\r\n    case LOGIN_SUCCESS:\r\n      let now = (new Date()).getTime();\r\n      // set expire day to 2 hrs\r\n      let day = 1000 * 60 * 60 * 2;\r\n      let auth = {\r\n        auth: true,\r\n        expireTime: now + day\r\n      }\r\n      localStorage.setItem(\"authendicated\", JSON.stringify(auth));\r\n      return {...state, isAuthendicated: auth, loggingIn: false, loginState: 1}\r\n      break;\r\n    case LOGIN_FAIL:\r\n      return {...state, loggingIn: false, loginState: -1}\r\n      break;\r\n    case EXPIRE:\r\n      localStorage.setItem(\"authendicated\", null);\r\n      return {...state, isAuthendicated: null}\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function login(password) {\r\n  return {\r\n    type: LOGIN,\r\n    payload: {\r\n      request: {\r\n        method: \"POST\",\r\n        url: \"/authendication/login\",\r\n        data: {\r\n          password: password\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function expire() {\r\n  return {\r\n    type: EXPIRE,\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default authenticationReducer;\r\n","import Decider from \"../components\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { login, expire} from \"../reducers\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthendicated: state.mainPageData.isAuthendicated,\r\n    loggingIn: state.mainPageData.loggingIn,\r\n    loginState: state.mainPageData.loginState\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators({\r\n    login,\r\n    expire\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Decider);\r\n","import { combineReducers } from 'redux';\r\nimport mainPageData from \"../features/decider/reducers\";\r\nimport priceManagerData from \"../features/manager/reducers\";\r\nimport accountManagerData from \"../features/accountManager/reducers\";\r\nimport * as asyncInitialState from 'redux-async-initial-state';\r\n\r\nconst reducers = {\r\n  mainPageData,\r\n  priceManagerData,\r\n  accountManagerData\r\n}\r\n\r\nexport default asyncInitialState.outerReducer(\r\n  combineReducers({\r\n    ...reducers,\r\n    asyncInitialState: asyncInitialState.innerReducer\r\n  })\r\n)\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport axiosMiddleware from \"redux-axios-middleware\";\r\nimport reducer from \"./reducers\";\r\nimport axios from 'axios';\r\n\r\nconst client = axios.create({\r\n  baseURL: \"http://45.79.90.162:8887/api\",\r\n  responseType: \"json\"\r\n});\r\n\r\nlet store = createStore(\r\n  reducer,\r\n  applyMiddleware(axiosMiddleware(client))\r\n);\r\n\r\nexport { store }\r\n","import Decider from './features/decider/containers';\nimport { Provider } from 'react-redux'\nimport { store }  from './store';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import './App.css';\n\nfunction App() {\n  console.log(\"app is activated\")\n  return (\n    <div style = {{height:\"100%\",margin:0, overflowX: \"hidden\"}}>\n      <BrowserRouter basename={window.location.pathname || ''}>\n        <Provider store={store} >\n          <Decider />\n        </Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const crypto = require('crypto');\r\n\r\nexport function validateEmail(email) {\r\n  if(typeof email != \"string\" || email.trim().length == 0) return false;\r\n  const reg =  /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n  return reg.test(email);\r\n}\r\n\r\nexport function encrypt(text) {\r\n  const iv = crypto.randomBytes(16);\r\n  const algorithm = process.env.REACT_APP_CLIENT_SECRET;\r\n  const secretKey = process.env.REACT_APP_SECRET_KEY;\r\n  const cipher = crypto.createCipheriv(algorithm, secretKey, iv);\r\n  const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\r\n  return {\r\n        iv: iv.toString('hex'),\r\n        content: encrypted.toString('hex')\r\n    };\r\n}\r\n\r\nexport function decrypt(hash) {\r\n  const algorithm = process.env.REACT_APP_CLIENT_SECRET;\r\n  const secretKey = process.env.REACT_APP_SECRET_KEY;\r\n  const decipher = crypto.createDecipheriv(algorithm, secretKey, Buffer.from(hash.iv, 'hex'));\r\n  const decrpyted = Buffer.concat([decipher.update(Buffer.from(hash.content, 'hex')), decipher.final()]);\r\n  return decrpyted.toString();\r\n}\r\n"],"sourceRoot":""}